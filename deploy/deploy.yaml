apiVersion: extensions/v1beta1 
kind: Deployment
metadata:
  name: blog-solo
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      project: blog
      app: solo
  template:
    metadata:
      labels:
        project: blog
        app: solo	
    spec:
      imagePullSecrets:
      - name: registry-pull-secret
      containers:
      - name: solo
        image: qyzhcaofei/solo:<BUILD_TAG>
        imagePullPolicy: Always
        env:
        - name: branch
          value: <BRANCH_NAME>
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        resources:
          limits:
            cpu: 600m
            memory: 4Gi
          requests:
            cpu: 300m
            memory: 100Mi
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 20
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 20
        volumeMounts:
        - name: jdk
          mountPath: /usr/local/jdk
      volumes:
      - name: jdk
        hostPath:
          path: /usr/local/jdk
 
 ---
  
apiVersion: v1
kind: ServiceAccount
metadata:
  name: blog-solo
  namespace: default

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: blog-solo
  namespace: default
rules:
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments"]
    verbs: ["create", "delete", "get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["create", "delete", "get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get","list","watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: blog-solo
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: blog-solo
subjects:
  - kind: ServiceAccount
    name: blog-solo
    namespace: default

---
apiVersion: v1
kind: Service
metadata:
  name: blog-solo
  namespace: default
  labels:
    project: blog
    app: solo
spec:
  selector:
    project: blog
    app: solo
  ports:
  - name: web
    port: 80
    targetPort: 8080
    nodePort: 30006
  type: NodePort
